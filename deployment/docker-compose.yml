# Docker Compose Configuration for Odoo Dispatch Management

version: '3.8'

services:
  db:
    image: postgres:15
    environment:
      - POSTGRES_DB=${DB_NAME}
      - POSTGRES_USER=${DB_USER}
      - POSTGRES_PASSWORD=${DB_PASSWORD}
      - PGDATA=/var/lib/postgresql/data/pgdata
    volumes:
      - postgres_data:/var/lib/postgresql/data/pgdata
    restart: unless-stopped
    networks:
      - odoo-network
    ports:
      - "5432:5432"

  odoo:
    image: odoo:17
    depends_on:
      - db
    environment:
      - HOST=${DB_HOST}
      - USER=${DB_USER}
      - PASSWORD=${DB_PASSWORD}
    volumes:
      - odoo_data:/var/lib/odoo
      - ./odoo/addons:/mnt/extra-addons
      - ./odoo/config:/etc/odoo
    ports:
      - "8069:8069"
    restart: unless-stopped
    networks:
      - odoo-network
    command: >
      odoo
      --database=${DB_NAME}
      --db_host=${DB_HOST}
      --db_user=${DB_USER}
      --db_password=${DB_PASSWORD}
      --addons-path=/mnt/extra-addons,/usr/lib/python3/dist-packages/odoo/addons
      --workers=4
      --max-cron-threads=2
      --limit-memory-hard=2684354560
      --limit-memory-soft=2147483648
      --limit-time-cpu=600
      --limit-time-real=1200

  nginx:
    image: nginx:alpine
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf
      - ./nginx/ssl:/etc/nginx/ssl
      - ./nginx/logs:/var/log/nginx
    depends_on:
      - odoo
    restart: unless-stopped
    networks:
      - odoo-network

volumes:
  postgres_data:
  odoo_data:

networks:
  odoo-network:
    driver: bridge
